<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <!-- Service Label (must be unique) -->
    <key>Label</key>
    <string>com.llmclass.platform.services</string>
    
    <!-- Program and Arguments -->
    <key>ProgramArguments</key>
    <array>
        <string>/bin/bash</string>
        <string>-c</string>
        <string>cd /Users/YOUR_USERNAME/Documents/llmclass_platform/deploy && make up ENV=prod</string>
    </array>
    
    <!-- Working Directory -->
    <key>WorkingDirectory</key>
    <string>/Users/YOUR_USERNAME/Documents/llmclass_platform/deploy</string>
    
    <!-- Environment Variables -->
    <key>EnvironmentVariables</key>
    <dict>
        <key>PATH</key>
        <string>/opt/homebrew/bin:/usr/local/bin:/usr/bin:/bin</string>
        <key>DOCKER_HOST</key>
        <string>unix:///Users/YOUR_USERNAME/.docker/run/docker.sock</string>
        <key>COMPOSE_PROJECT_NAME</key>
        <string>mono-class-platform</string>
    </dict>
    
    <!-- Auto-start settings -->
    <key>RunAtLoad</key>
    <true/>
    
    <!-- Wait for Docker to be ready -->
    <key>LaunchOnlyOnce</key>
    <true/>
    
    <!-- Restart settings -->
    <key>KeepAlive</key>
    <dict>
        <key>SuccessfulExit</key>
        <false/>
        <key>Crashed</key>
        <true/>
        <key>NetworkState</key>
        <true/>
    </dict>
    
    <!-- Throttle restarts -->
    <key>ThrottleInterval</key>
    <integer>60</integer>
    
    <!-- Logging -->
    <key>StandardOutPath</key>
    <string>/Users/YOUR_USERNAME/Documents/llmclass_platform/logs/services.log</string>
    
    <key>StandardErrorPath</key>
    <string>/Users/YOUR_USERNAME/Documents/llmclass_platform/logs/services.error.log</string>
    
    <!-- Process settings -->
    <key>ProcessType</key>
    <string>Background</string>
    
    <!-- Wait for network -->
    <key>StartInterval</key>
    <integer>30</integer>
    
    <!-- Security (run as user, not root) -->
    <key>UserName</key>
    <string>YOUR_USERNAME</string>
    
    <key>GroupName</key>
    <string>staff</string>
    
    <!-- Additional settings -->
    <key>AbandonProcessGroup</key>
    <true/>
    
    <key>LowPriorityIO</key>
    <false/>
</dict>
</plist>

<!-- 
Installation Instructions:

1. Prerequisites:
   - Docker Desktop must be installed and running
   - Project repository cloned to ~/Documents/llmclass_platform/
   - Production environment configured (.env.prod)

2. Customize this file:
   - Replace YOUR_USERNAME with your actual username
   - Verify all paths are correct for your system
   - Ensure Docker Desktop starts automatically on login

3. Install the service:
   cp docker-services.plist.example ~/Library/LaunchAgents/com.llmclass.platform.services.plist
   
4. Edit the installed file:
   nano ~/Library/LaunchAgents/com.llmclass.platform.services.plist

5. Create logs directory:
   mkdir -p ~/Documents/llmclass_platform/logs

6. Load the service:
   launchctl load ~/Library/LaunchAgents/com.llmclass.platform.services.plist

7. Start the service:
   launchctl start com.llmclass.platform.services

8. Check status:
   launchctl list | grep llmclass
   
9. View logs:
   tail -f ~/Documents/llmclass_platform/logs/services.log

Management Commands:
   # Stop service
   launchctl stop com.llmclass.platform.services
   
   # Restart service
   launchctl stop com.llmclass.platform.services
   launchctl start com.llmclass.platform.services
   
   # Unload service
   launchctl unload ~/Library/LaunchAgents/com.llmclass.platform.services.plist
   
   # Check if service is loaded
   launchctl list com.llmclass.platform.services
-->