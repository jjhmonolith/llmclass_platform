import { useState } from 'react'\nimport { api } from '@/utils/api'\nimport type { PingResponse } from '@/types/api'\n\nexport function DevPing() {\n  const [pingResult, setPingResult] = useState<PingResponse | null>(null)\n  const [errorResult, setErrorResult] = useState<any>(null)\n  const [loading, setLoading] = useState(false)\n  const [errorLoading, setErrorLoading] = useState(false)\n\n  const handlePing = async () => {\n    try {\n      setLoading(true)\n      setPingResult(null)\n      const result = await api.devPing()\n      setPingResult(result)\n    } catch (err) {\n      console.error('Ping failed:', err)\n      setPingResult(null)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const handleError = async () => {\n    try {\n      setErrorLoading(true)\n      setErrorResult(null)\n      await api.devError()\n    } catch (err) {\n      // This is expected - we're testing error handling\n      setErrorResult({\n        error: err instanceof Error ? err.message : 'Unknown error',\n        timestamp: new Date().toISOString()\n      })\n    } finally {\n      setErrorLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <a\n              href=\"/\"\n              className=\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded transition-colors text-sm\"\n            >\n              ← 홈으로\n            </a>\n            <h1 className=\"text-3xl font-bold text-gray-900\">\n              개발 도구\n            </h1>\n          </div>\n          <p className=\"text-gray-600\">\n            API 개발 엔드포인트를 테스트할 수 있습니다.\n          </p>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n          <div className=\"border rounded-lg p-6 bg-white\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-800\">Ping 테스트</h2>\n              <span className=\"text-2xl\">🏓</span>\n            </div>\n            <p className=\"text-gray-600 text-sm mb-4\">\n              /api/dev/ping 엔드포인트를 호출하여 서버 응답을 확인합니다.\n            </p>\n            <button\n              onClick={handlePing}\n              disabled={loading}\n              className=\"w-full py-3 bg-blue-100 hover:bg-blue-200 disabled:bg-gray-100 rounded transition-colors font-medium\"\n            >\n              {loading ? 'Ping 전송 중...' : 'Ping 전송'}\n            </button>\n          </div>\n\n          <div className=\"border rounded-lg p-6 bg-white\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className=\"text-xl font-semibold text-gray-800\">에러 테스트</h2>\n              <span className=\"text-2xl\">💥</span>\n            </div>\n            <p className=\"text-gray-600 text-sm mb-4\">\n              /api/dev/error 엔드포인트로 의도적 500 에러를 발생시킵니다.\n            </p>\n            <button\n              onClick={handleError}\n              disabled={errorLoading}\n              className=\"w-full py-3 bg-red-100 hover:bg-red-200 disabled:bg-gray-100 rounded transition-colors font-medium\"\n            >\n              {errorLoading ? '에러 발생 중...' : '에러 발생 테스트'}\n            </button>\n          </div>\n        </div>\n\n        {/* Results */}\n        <div className=\"space-y-6\">\n          {/* Ping Result */}\n          {pingResult && (\n            <div className=\"border rounded-lg p-6 bg-green-50 border-green-200\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center\">\n                <span className=\"text-green-600 mr-2\">✅</span>\n                Ping 응답 성공\n              </h3>\n              <div className=\"bg-white rounded p-4 border\">\n                <pre className=\"text-sm overflow-x-auto text-gray-800\">\n                  {JSON.stringify(pingResult, null, 2)}\n                </pre>\n              </div>\n              <div className=\"mt-4 grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                <div>\n                  <span className=\"font-medium text-gray-700\">Request ID:</span>\n                  <span className=\"ml-2 font-mono text-blue-600\">{pingResult.request_id}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium text-gray-700\">환경:</span>\n                  <span className=\"ml-2 font-medium\">{pingResult.environment}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium text-gray-700\">클라이언트 IP:</span>\n                  <span className=\"ml-2 font-mono\">{pingResult.client_ip}</span>\n                </div>\n                <div>\n                  <span className=\"font-medium text-gray-700\">버전:</span>\n                  <span className=\"ml-2 font-mono\">{pingResult.version}</span>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {/* Error Result */}\n          {errorResult && (\n            <div className=\"border rounded-lg p-6 bg-red-50 border-red-200\">\n              <h3 className=\"text-lg font-semibold text-gray-800 mb-4 flex items-center\">\n                <span className=\"text-red-600 mr-2\">❌</span>\n                에러 응답 (의도된 동작)\n              </h3>\n              <div className=\"bg-white rounded p-4 border\">\n                <pre className=\"text-sm overflow-x-auto text-gray-800\">\n                  {JSON.stringify(errorResult, null, 2)}\n                </pre>\n              </div>\n              <div className=\"mt-4 text-sm text-gray-600\">\n                <p>\n                  <strong>설명:</strong> 이것은 의도적으로 발생시킨 500 에러입니다. \n                  에러 핸들링이 올바르게 작동하는지 확인하는 용도입니다.\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Info Panel */}\n        <div className=\"mt-8 border rounded-lg p-6 bg-blue-50 border-blue-200\">\n          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">ℹ️ 개발 도구 정보</h3>\n          <div className=\"space-y-2 text-sm\">\n            <p>\n              <strong>Ping 엔드포인트:</strong> 서버 상태와 요청 정보를 반환합니다. \n              Request-ID 추적, 클라이언트 IP 감지 등을 확인할 수 있습니다.\n            </p>\n            <p>\n              <strong>에러 엔드포인트:</strong> 의도적으로 500 에러를 발생시켜 \n              전역 에러 핸들러와 로깅 시스템을 테스트합니다.\n            </p>\n            <p className=\"pt-2 border-t text-gray-600\">\n              <strong>참고:</strong> 이 도구들은 개발 환경에서만 사용 가능하며, \n              프로덕션에서는 비활성화됩니다.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}"