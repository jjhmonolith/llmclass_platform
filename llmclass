#!/bin/bash

# üéì LLM Classroom ÌÜµÌï© Í¥ÄÎ¶¨ ÎèÑÍµ¨
# Î≤ÑÏ†Ñ: 1.0.0
# ÏÉùÏÑ±Ïùº: 2025-08-25

set -e

# ÏÉâÏÉÅ Ï†ïÏùò
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ÌîÑÎ°úÏ†ùÌä∏ Í≤ΩÎ°ú
PROJECT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PIDS_DIR="$PROJECT_DIR/.pids"
LOGS_DIR="$PROJECT_DIR/logs"
CONFIG_FILE="$PROJECT_DIR/config/services.yml"

# PID ÎîîÎ†âÌÜ†Î¶¨ ÏÉùÏÑ±
mkdir -p "$PIDS_DIR" "$LOGS_DIR"

# ÎèÑÏõÄÎßê ÌëúÏãú
show_help() {
    echo -e "${BLUE}üéì LLM Classroom ÌÜµÌï© Í¥ÄÎ¶¨ ÎèÑÍµ¨${NC}"
    echo ""
    echo "ÏÇ¨Ïö©Î≤ï: ./llmclass [Î™ÖÎ†π] [ÏòµÏÖò]"
    echo ""
    echo "Î™ÖÎ†πÏñ¥:"
    echo "  start      Î™®Îì† ÏÑúÎπÑÏä§ÏôÄ ÌÑ∞ÎÑê ÏãúÏûë"
    echo "  stop       Î™®Îì† ÏÑúÎπÑÏä§ÏôÄ ÌÑ∞ÎÑê Ï¢ÖÎ£å"
    echo "  restart    Î™®Îì† ÏÑúÎπÑÏä§ Ïû¨ÏãúÏûë"
    echo "  status     ÏÑúÎπÑÏä§ ÏÉÅÌÉú ÌôïÏù∏"
    echo "  logs       Î°úÍ∑∏ ÌôïÏù∏ (Ïã§ÏãúÍ∞Ñ)"
    echo "  tunnel     ÌÑ∞ÎÑêÎßå Í¥ÄÎ¶¨"
    echo "  health     Ìó¨Ïä§Ï≤¥ÌÅ¨"
    echo "  doctor     Î¨∏Ï†ú ÏßÑÎã® Î∞è ÏûêÎèô ÏàòÏ†ï"
    echo ""
    echo "ÏòµÏÖò:"
    echo "  --local    Î°úÏª¨ Ï†ÑÏö© Î™®Îìú (ÌÑ∞ÎÑê ÏóÜÏù¥)"
    echo "  --debug    ÎîîÎ≤ÑÍ∑∏ Î™®Îìú"
    echo ""
    echo "ÏòàÏãú:"
    echo "  ./llmclass start        # Î™®Îì† ÏÑúÎπÑÏä§ ÏãúÏûë"
    echo "  ./llmclass status       # ÏÉÅÌÉú ÌôïÏù∏"
    echo "  ./llmclass logs proto4  # proto4 Î°úÍ∑∏ Î≥¥Í∏∞"
}

# ÏÑúÎπÑÏä§ ÏãúÏûë
start_services() {
    echo -e "${BLUE}üöÄ LLM Classroom ÏÑúÎπÑÏä§ ÏãúÏûë Ï§ë...${NC}"
    
    # Í∏∞Ï°¥ ÌîÑÎ°úÏÑ∏Ïä§ ÌôïÏù∏
    if check_services; then
        echo -e "${YELLOW}‚ö†Ô∏è  ÏùºÎ∂Ä ÏÑúÎπÑÏä§Í∞Ä Ïù¥ÎØ∏ Ïã§Ìñâ Ï§ëÏûÖÎãàÎã§.${NC}"
        echo "   Ïû¨ÏãúÏûëÌïòÎ†§Î©¥ 'restart' Î™ÖÎ†πÏùÑ ÏÇ¨Ïö©ÌïòÏÑ∏Ïöî."
        return 1
    fi
    
    # Í∞Å ÏÑúÎπÑÏä§ ÏãúÏûë
    echo -e "${GREEN}üìö Proto4 (Socratic) ÏãúÏûë...${NC}"
    cd "$PROJECT_DIR/proto4/backend"
    nohup python3 main.py > "$LOGS_DIR/proto4.log" 2>&1 &
    echo $! > "$PIDS_DIR/proto4.pid"
    sleep 2
    
    echo -e "${GREEN}üéØ Proto1 (Strategic) ÏãúÏûë...${NC}"
    cd "$PROJECT_DIR/proto1"
    nohup python3 main.py > "$LOGS_DIR/proto1.log" 2>&1 &
    echo $! > "$PIDS_DIR/proto1.pid"
    sleep 2
    
    echo -e "${GREEN}üî• Proto3 (FIRE) ÏãúÏûë...${NC}"
    cd "$PROJECT_DIR/proto3"
    nohup python3 main.py > "$LOGS_DIR/proto3.log" 2>&1 &
    echo $! > "$PIDS_DIR/proto3.pid"
    sleep 2
    
    echo -e "${GREEN}üè† Student Hub ÏãúÏûë...${NC}"
    cd "$PROJECT_DIR/student/backend"
    nohup python3 main.py > "$LOGS_DIR/hub.log" 2>&1 &
    echo $! > "$PIDS_DIR/hub.pid"
    sleep 2
    
    # Î°úÏª¨ Î™®ÎìúÍ∞Ä ÏïÑÎãàÎ©¥ ÌÑ∞ÎÑê ÏãúÏûë
    if [[ "$1" != "--local" ]]; then
        start_tunnel
    fi
    
    echo -e "${GREEN}‚úÖ Î™®Îì† ÏÑúÎπÑÏä§Í∞Ä ÏãúÏûëÎêòÏóàÏäµÎãàÎã§!${NC}"
    show_status
}

# ÏÑúÎπÑÏä§ Ï§ëÏßÄ
stop_services() {
    echo -e "${RED}üõë ÏÑúÎπÑÏä§ Ï¢ÖÎ£å Ï§ë...${NC}"
    
    # PID ÌååÏùºÎ°ú ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å
    for service in proto4 proto1 proto3 hub; do
        if [ -f "$PIDS_DIR/$service.pid" ]; then
            PID=$(cat "$PIDS_DIR/$service.pid")
            if kill -0 $PID 2>/dev/null; then
                kill $PID
                echo "   $service Ï¢ÖÎ£åÎê® (PID: $PID)"
            fi
            rm -f "$PIDS_DIR/$service.pid"
        fi
    done
    
    # ÌÑ∞ÎÑê Ï¢ÖÎ£å
    stop_tunnel
    
    echo -e "${GREEN}‚úÖ Î™®Îì† ÏÑúÎπÑÏä§Í∞Ä Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§.${NC}"
}

# ÌÑ∞ÎÑê ÏãúÏûë
start_tunnel() {
    echo -e "${BLUE}üåê CloudFlare ÌÑ∞ÎÑê ÏãúÏûë Ï§ë...${NC}"
    
    # Í∏∞Ï°¥ ÌÑ∞ÎÑê ÌîÑÎ°úÏÑ∏Ïä§ ÌôïÏù∏ Î∞è Ï¢ÖÎ£å
    pkill -f "cloudflared.*config-llmclass" 2>/dev/null || true
    sleep 2
    
    # ÌÑ∞ÎÑê ÏãúÏûë
    nohup cloudflared tunnel --config "$HOME/.cloudflared/config-llmclass.yml" run > "$LOGS_DIR/tunnel.log" 2>&1 &
    echo $! > "$PIDS_DIR/tunnel.pid"
    
    sleep 3
    echo -e "${GREEN}‚úÖ ÌÑ∞ÎÑêÏù¥ Ïó∞Í≤∞ÎêòÏóàÏäµÎãàÎã§.${NC}"
}

# ÌÑ∞ÎÑê Ï§ëÏßÄ
stop_tunnel() {
    echo -e "${RED}üåê ÌÑ∞ÎÑê Ï¢ÖÎ£å Ï§ë...${NC}"
    
    # PID ÌååÏùºÎ°ú Ï¢ÖÎ£å
    if [ -f "$PIDS_DIR/tunnel.pid" ]; then
        PID=$(cat "$PIDS_DIR/tunnel.pid")
        if kill -0 $PID 2>/dev/null; then
            kill $PID
            echo "   ÌÑ∞ÎÑê Ï¢ÖÎ£åÎê® (PID: $PID)"
        fi
        rm -f "$PIDS_DIR/tunnel.pid"
    fi
    
    # ÌòπÏãú ÎÇ®ÏïÑÏûàÎäî ÌîÑÎ°úÏÑ∏Ïä§ Ï†ïÎ¶¨
    pkill -f "cloudflared.*config-llmclass" 2>/dev/null || true
}

# ÏÑúÎπÑÏä§ ÏÉÅÌÉú ÌôïÏù∏
check_services() {
    local running=0
    
    for service in proto4 proto1 proto3 hub; do
        if [ -f "$PIDS_DIR/$service.pid" ]; then
            PID=$(cat "$PIDS_DIR/$service.pid")
            if kill -0 $PID 2>/dev/null; then
                running=$((running + 1))
            else
                rm -f "$PIDS_DIR/$service.pid"
            fi
        fi
    done
    
    [ $running -gt 0 ]
}

# ÏÉÅÌÉú ÌëúÏãú
show_status() {
    echo -e "${BLUE}üìä ÏÑúÎπÑÏä§ ÏÉÅÌÉú${NC}"
    echo "================================="
    
    # Í∞Å ÏÑúÎπÑÏä§ ÏÉÅÌÉú ÌôïÏù∏
    for service in proto4 proto1 proto3 hub; do
        if [ -f "$PIDS_DIR/$service.pid" ]; then
            PID=$(cat "$PIDS_DIR/$service.pid")
            if kill -0 $PID 2>/dev/null; then
                case $service in
                    proto4) 
                        echo -e "‚úÖ Proto4 (Socratic)  : ${GREEN}Ïã§ÌñâÏ§ë${NC} [PID: $PID] ‚Üí socratic.llmclass.org"
                        ;;
                    proto1)
                        echo -e "‚úÖ Proto1 (Strategic) : ${GREEN}Ïã§ÌñâÏ§ë${NC} [PID: $PID] ‚Üí strategic.llmclass.org"
                        ;;
                    proto3)
                        echo -e "‚úÖ Proto3 (FIRE)      : ${GREEN}Ïã§ÌñâÏ§ë${NC} [PID: $PID] ‚Üí fire.llmclass.org"
                        ;;
                    hub)
                        echo -e "‚úÖ Student Hub        : ${GREEN}Ïã§ÌñâÏ§ë${NC} [PID: $PID] ‚Üí hub.llmclass.org"
                        ;;
                esac
            else
                echo -e "‚ùå $service: ${RED}Ï§ëÏßÄÎê®${NC}"
                rm -f "$PIDS_DIR/$service.pid"
            fi
        else
            echo -e "‚ùå $service: ${RED}Ï§ëÏßÄÎê®${NC}"
        fi
    done
    
    # ÌÑ∞ÎÑê ÏÉÅÌÉú
    if [ -f "$PIDS_DIR/tunnel.pid" ]; then
        PID=$(cat "$PIDS_DIR/tunnel.pid")
        if kill -0 $PID 2>/dev/null; then
            echo -e "‚úÖ CloudFlare ÌÑ∞ÎÑê    : ${GREEN}Ïó∞Í≤∞Îê®${NC} [PID: $PID]"
        else
            echo -e "‚ùå CloudFlare ÌÑ∞ÎÑê: ${RED}Ïó∞Í≤∞ ÏïàÎê®${NC}"
        fi
    else
        echo -e "‚ùå CloudFlare ÌÑ∞ÎÑê: ${RED}Ïó∞Í≤∞ ÏïàÎê®${NC}"
    fi
    
    echo "================================="
    
    # Ìè¨Ìä∏ ÏÉÅÌÉú
    echo -e "\n${BLUE}üì° Ìè¨Ìä∏ ÏÉÅÌÉú${NC}"
    echo "--------------------------------"
    for port in 8000 8001 8002 8003; do
        if lsof -i :$port > /dev/null 2>&1; then
            echo -e "‚úÖ Ìè¨Ìä∏ $port: ${GREEN}ÏÇ¨Ïö©Ï§ë${NC}"
        else
            echo -e "‚ùå Ìè¨Ìä∏ $port: ${RED}ÎØ∏ÏÇ¨Ïö©${NC}"
        fi
    done
}

# Ìó¨Ïä§Ï≤¥ÌÅ¨
health_check() {
    echo -e "${BLUE}üè• Ìó¨Ïä§Ï≤¥ÌÅ¨ Ïã§Ìñâ Ï§ë...${NC}"
    echo "================================="
    
    local all_healthy=true
    
    # Í∞Å ÏÑúÎπÑÏä§ Ìó¨Ïä§Ï≤¥ÌÅ¨
    for port in 8000 8001 8002 8003; do
        response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:$port/health 2>/dev/null)
        if [ "$response" = "200" ]; then
            echo -e "‚úÖ Ìè¨Ìä∏ $port: ${GREEN}Ï†ïÏÉÅ${NC}"
        else
            echo -e "‚ùå Ìè¨Ìä∏ $port: ${RED}ÏùëÎãµ ÏóÜÏùå${NC}"
            all_healthy=false
        fi
    done
    
    # Ïô∏Î∂Ä Ï†ëÏÜç ÌÖåÏä§Ìä∏
    echo -e "\n${BLUE}üåç Ïô∏Î∂Ä Ï†ëÏÜç ÌÖåÏä§Ìä∏${NC}"
    echo "--------------------------------"
    for domain in hub fire strategic socratic; do
        response=$(curl -s -o /dev/null -w "%{http_code}" https://$domain.llmclass.org 2>/dev/null)
        if [ "$response" = "200" ] || [ "$response" = "405" ]; then
            echo -e "‚úÖ $domain.llmclass.org: ${GREEN}Ï†ëÏÜç Í∞ÄÎä•${NC}"
        else
            echo -e "‚ùå $domain.llmclass.org: ${RED}Ï†ëÏÜç Î∂àÍ∞Ä${NC} (HTTP $response)"
            all_healthy=false
        fi
    done
    
    if $all_healthy; then
        echo -e "\n${GREEN}‚úÖ Î™®Îì† ÏÑúÎπÑÏä§Í∞Ä Ï†ïÏÉÅÏûÖÎãàÎã§!${NC}"
    else
        echo -e "\n${YELLOW}‚ö†Ô∏è  ÏùºÎ∂Ä ÏÑúÎπÑÏä§Ïóê Î¨∏Ï†úÍ∞Ä ÏûàÏäµÎãàÎã§.${NC}"
        echo "   './llmclass doctor'Î•º Ïã§ÌñâÌïòÏó¨ ÏûêÎèô ÏàòÏ†ïÏùÑ ÏãúÎèÑÌïòÏÑ∏Ïöî."
    fi
}

# Î¨∏Ï†ú ÏßÑÎã® Î∞è ÏàòÏ†ï
doctor() {
    echo -e "${BLUE}üîß ÏãúÏä§ÌÖú ÏßÑÎã® Î∞è ÏûêÎèô ÏàòÏ†ï...${NC}"
    
    # Ï§ëÎ≥µ ÌÑ∞ÎÑê ÌôïÏù∏
    echo "1. Ï§ëÎ≥µ ÌÑ∞ÎÑê ÌîÑÎ°úÏÑ∏Ïä§ ÌôïÏù∏..."
    local tunnel_count=$(pgrep -f "cloudflared.*config-llmclass" | wc -l)
    if [ $tunnel_count -gt 1 ]; then
        echo -e "${YELLOW}   ‚ö†Ô∏è  Ï§ëÎ≥µ ÌÑ∞ÎÑê Î∞úÍ≤¨ ($tunnel_countÍ∞ú)${NC}"
        echo "   ÏàòÏ†ï Ï§ë..."
        pkill -f "cloudflared.*config-llmclass"
        sleep 2
        start_tunnel
        echo -e "${GREEN}   ‚úÖ ÏàòÏ†ï ÏôÑÎ£å${NC}"
    else
        echo -e "${GREEN}   ‚úÖ Ï†ïÏÉÅ${NC}"
    fi
    
    # Ìè¨Ìä∏ Ï∂©Îèå ÌôïÏù∏
    echo "2. Ìè¨Ìä∏ Ï∂©Îèå ÌôïÏù∏..."
    local port_issue=false
    for port in 8000 8001 8002 8003; do
        if lsof -i :$port > /dev/null 2>&1; then
            # PID ÌôïÏù∏
            local port_pid=$(lsof -ti :$port)
            local service_name=""
            case $port in
                8000) service_name="proto4" ;;
                8001) service_name="proto1" ;;
                8002) service_name="proto3" ;;
                8003) service_name="hub" ;;
            esac
            
            if [ -f "$PIDS_DIR/$service_name.pid" ]; then
                local expected_pid=$(cat "$PIDS_DIR/$service_name.pid")
                if [ "$port_pid" != "$expected_pid" ]; then
                    echo -e "${YELLOW}   ‚ö†Ô∏è  Ìè¨Ìä∏ $port: PID Î∂àÏùºÏπò${NC}"
                    port_issue=true
                fi
            fi
        fi
    done
    
    if $port_issue; then
        echo "   Ï†ÑÏ≤¥ Ïû¨ÏãúÏûëÏùÑ Í∂åÏû•Ìï©ÎãàÎã§."
        echo "   './llmclass restart' Ïã§Ìñâ"
    else
        echo -e "${GREEN}   ‚úÖ Ï†ïÏÉÅ${NC}"
    fi
    
    echo -e "\n${GREEN}‚úÖ ÏßÑÎã® ÏôÑÎ£å!${NC}"
}

# Î°úÍ∑∏ Î≥¥Í∏∞
show_logs() {
    local service=$1
    if [ -z "$service" ]; then
        echo "Ï†ÑÏ≤¥ Î°úÍ∑∏ Î≥¥Í∏∞ (Ctrl+CÎ°ú Ï¢ÖÎ£å)"
        tail -f "$LOGS_DIR"/*.log
    else
        if [ -f "$LOGS_DIR/$service.log" ]; then
            echo "$service Î°úÍ∑∏ Î≥¥Í∏∞ (Ctrl+CÎ°ú Ï¢ÖÎ£å)"
            tail -f "$LOGS_DIR/$service.log"
        else
            echo -e "${RED}Ïò§Î•ò: $service Î°úÍ∑∏ ÌååÏùºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.${NC}"
        fi
    fi
}

# Î©îÏù∏ Ïã§Ìñâ
case "$1" in
    start)
        start_services $2
        ;;
    stop)
        stop_services
        ;;
    restart)
        stop_services
        sleep 2
        start_services
        ;;
    status)
        show_status
        ;;
    health)
        health_check
        ;;
    doctor)
        doctor
        ;;
    tunnel)
        case "$2" in
            start) start_tunnel ;;
            stop) stop_tunnel ;;
            restart) stop_tunnel; sleep 2; start_tunnel ;;
            *) echo "ÏÇ¨Ïö©Î≤ï: ./llmclass tunnel [start|stop|restart]" ;;
        esac
        ;;
    logs)
        show_logs $2
        ;;
    *)
        show_help
        ;;
esac